void	ft_sierpinsky(void *param)
{
	uint32_t color = ft_pixel(255, 255, 255, 255);

	t_point	a;
	t_point	b;
	int32_t aux;

	int32_t	m;
	int32_t	y;
	int32_t	dis;

	int32_t	del_e;
	int32_t	del_ne;

	int32_t	dx;
	int32_t	dy;

	int32_t neg_y = 1;
	int32_t neg_x = 1;

	a.x = -400;
	a.y = -400;

	b.x = +20;
	b.y = +400;

	dx = b.x - a.x;
	dy = b.y - a.y;

	m = dy / dx;

	// del_e = 2 * abs(dy);
	// del_ne = 2 * (abs(dy) - abs(dx));

	//ft_trans(&a, &b);
	if (m >= 0 && m <=1)
	{
		dis = 2 * abs(dy) - abs(dx);
		while (a.x <= b.x)
		{
			if (dis <= 0)
			{
				dis = dis + (2 * abs(dy));
				a.x = a.x + 1;
				mlx_put_pixel(image, a.x + 400, -1*a.y + 400, color);
			}
			else if (dis > 0)
			{
				dis = dis + (2 * (abs(dy) - abs(dx)));
				a.y = a.y + 1;
				a.x = a.x + 1;
				mlx_put_pixel(image, a.x + 400, -1*a.y + 400, color);
			}
		}
	}
	else if (m > 1)
	{
		dis = 2 * abs(dx) - abs(dy);
		while (a.y <= b.y)
		{
			if (dis <= 0)
			{
				dis = dis + (2 * abs(dx));
				a.y = a.y + 1;
				mlx_put_pixel(image, a.x + 400, -1*a.y + 400, color);
			}
			else if (dis > 0)
			{
				dis = dis + (2 * (abs(dx) - abs(dy)));
				a.x = a.x + 1;
				a.y = a.y + 1;
				mlx_put_pixel(image, a.x + 400, -1*a.y + 400, color);
			}
		}
	}
}
